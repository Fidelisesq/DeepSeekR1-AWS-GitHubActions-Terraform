name: Deploying DeepSeek Model R1 on AWS via Terraform & GitHub Actions

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: "Choose action (apply/destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

  apply:
    runs-on: ubuntu-latest
    needs: setup
    if: github.event.inputs.action == 'apply' || github.event_name == 'push'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Init
        run: terraform init
        env:
          TF_LOG: DEBUG

      - name: Terraform Plan
        run: terraform plan -out=tfplan \
              -var "ami_id=${{ secrets.AMI_ID }}" \
              -var "certificate_arn=${{ secrets.CERTIFICATE_ARN }}" \
              -var "vpc_id=${{ secrets.VPC_ID }}" \
              -var "subnet_ids=${{ secrets.SUBNET_IDS }}" \
              -var "key_name=${{ secrets.KEY_NAME }}" \
              -var "key_id=${{ secrets.KEY_ID }}" \
              -var "hosted_zone_id=${{ secrets.HOSTED_ZONE_ID }}" \
              -var "instance_type=${{ secrets.INSTANCE_TYPE }}" \
              -var "my_ip=${{ secrets.MY_IP }}" \
              -var "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              -var "aws_region=${{ secrets.AWS_DEFAULT_REGION }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_LOG: DEBUG

      - name: Save Terraform State (Only If Apply Was Successful)
        if: success()
        uses: actions/upload-artifact@v4.6.0
        with:
          name: terraform-state
          path: terraform.tfstate
          retention-days: 5

  destroy:
    runs-on: ubuntu-latest
    needs: setup
    if: github.event.inputs.action == 'destroy'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Init & Destroy
        run: |
          terraform init -reconfigure
          terraform destroy -auto-approve
        env:
          TF_LOG: DEBUG
